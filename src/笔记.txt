列表就像是数组
 	调用函数使用（点记法） name.函数名（）
▪ print（”输出函数print”）
•列表
1.创建列表      >>> movies = ["The Honly Grail","The LIfe Brian ","the meaning of life"]
2.输出列表长度>>> print(len(movies))
3.输出列表    >>> print(movies)
4.像列表最后加入数据>>> movies.append("hello")
5.删除列表最后一个位置的数据>>> movies.pop()
6.向列表中插入多个数据>>> movies.extend(["agadgfg","adfgadgadg"])
7.删除指定数据>>> movies.remove("agadgfg")
8.向指定位置插入数据>>> movies.insert(0,"adfgadgadg") 

处理列表数据
  		迭代处理
1.
	for 循环 
	>>> for each_flick in movies：
	print(each_flick)
	
The Honly Grail
The LIfe Brian 
the meaning of life

2.
	while循环
>>> count = 0
>>> while count < len(movies):
	print(movies[count])
	count = count+1
                                 															***	  IndexEorr 越界
							>>> print(movies[5])
							Traceback (most recent call last):
 							 	File "<pyshell#56>", line 1, in <module>
   								 	print(movies[5])
							IndexError: list index out of range
 									****大小写敏感，名字错误
								
 									NameError: name 'movice' is not defined

 *****&&&&&&&********&&&&&&&
查看python内置方法列表BIF
		>>>dir(__builtins__)
功能描述
		>>> help(BIFname)
	eg	>>> help(vars)
*****&&&&&&&********&&&&&&&
3.当列表中有另一个列表时如果使用for循环只会输出列表，将列表当作一个元素处理
		
>>> test = ["name","dfaa",["hello","saasdf","asfdadf"],"end"]
>>> for i in test:
	print(i)

	
name
dfaa
['hello', 'saasdf', 'asfdadf']
end

——————————
	通过isinstance()检查，并嵌套   if。。。else可输出所有元素

>>> for i in test:
	if isinstance(i,list):
		for e in i:
			print(e)
	else:
		print(i)

		
name
dfaa
hello
saasdf
asfdadf
end
>>>—————————————
4.创建一个函数
test = ["name","dfaa",["hello","saasdf",["asfdadf","end"]]]

def print_lol(this):
	for i in this:
		if isinstance(i,list):
			print_lol(i)
		else:
			print(i)

>>>————————————————
5.将函数发布

ps:(首先要在用户目标目录下创建一个  ~/.pypirc 文件
        用于配置用户信息
        此处特地说明：创建.pypirc 的目录为：C:\Users\xxx-q001（你的计算机名）。
        创建时可以先创建一个txt文件，填入响应内容后修改文件名。
        修改时改为.pypirc.保存即可。 注意后面一定要加一个.
        
---------------------文件内容---------------
[distutils]
index-servers =
    pypi
    pypitest

[pypi]
repository: https://upload.pypi.org/pypi
username:username
password: password



----------------------------

        )

    <1	创建一个文件夹，创建setup.py文件
    <2  编辑文件内容:

                -----------------------------------------------
                from distutils.core import setup
                
                setup(
                    name   ="tan-nester",
                    version     =  '1.3.0',
                    py_modules = ['tan_nester'],
                    author  ='tanxvyang',
                    author_email='1173195180@qq.com',
                    url='',
                    description='A simple printer of nested lists'
                )


-----------------------------------------------

        <3.注册
                 python  setup.py sdist   //构建一个发布文件
            
        <4.      Python setup.py install   //将发布安装到自己的机器中
            
        <5.      Python setup.py register    //一台机器只需要执行一次
            
        <6 .      python  setup.py sdist upload  //上传软件发布






